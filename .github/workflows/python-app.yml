name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest  # Imposta per eseguire su Linux. Aggiunger√≤ anche il matrix per eseguire su macOS e Windows

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11.3"]
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "${{ matrix.python-version }}"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Build Executable using PyInstaller
      run: |
        # Crea il file eseguibile per ciascun sistema operativo
        if [ "$RUNNER_OS" == "Linux" ]; then
          pyinstaller --onefile --distpath=./dist/linux main.py
        elif [ "$RUNNER_OS" == "macOS" ]; then
          pyinstaller --onefile --distpath=./dist/mac main.py
        elif [ "$RUNNER_OS" == "Windows" ]; then
          pyinstaller --onefile --distpath=./dist/windows main.py
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ./dist
