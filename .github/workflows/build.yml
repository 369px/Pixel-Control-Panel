name: Build Python App for Windows, Mac and Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Application for macOS
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --icon=your-icon.ico main.py
          # Crea un file .dmg con l'app appena generata
          brew install create-dmg
          create-dmg dist/main.app dist/main.dmg

      - name: Build Application for Windows
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile main.py

      - name: Build Application for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile main.py

      - name: Archive Artifacts
        if: success()
        run: |
          mkdir -p build_artifacts
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv dist/main.app build_artifacts/${{ matrix.os }}-main.app
            mv dist/main.dmg build_artifacts/${{ matrix.os }}-main.dmg
          else
            mv dist/main build_artifacts/${{ matrix.os }}-main
          fi

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: builds-${{ matrix.os }}-${{ github.run_id }}
          path: build_artifacts/
